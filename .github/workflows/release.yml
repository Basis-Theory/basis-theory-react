name: Release

on:
  push:
    branches: [master, release]

jobs:
  build-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: ['14.x']
        os: [ubuntu-latest]
    env:
      CI: 1
      HUSKY: 0 # disables husky hooks
      NPM_TOKEN: ${{ secrets.NPM_RELEASE_TOKEN }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.SEMANTIC_RELEASE_PAT }}
      - name: Start Deploy Message
        uses: Basis-Theory/github-actions/deploy-slack-action@master
        with:
          slack-api-token: ${{ secrets.SLACK_DUCKBOT_API_KEY }}
          channel: ${{ vars.SLACK_DUCKBOT_PRODUCT_DEPLOY_CHANNEL }}
      - name: Use Node ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Install deps (with cache)
        uses: bahmutov/npm-install@v1
        with:
          install-command: yarn --frozen-lockfile --no-progress --ignore-scripts

      - name: Build
        run: make build
        env:
          SKIP_INSTALL: 1 # install with cache was done already

      - name: Release
        run: make release
        env:
          GITHUB_TOKEN: ${{ secrets.SEMANTIC_RELEASE_PAT }}

      - name: Dispatch integration tests run
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Verify
          repo: Basis-Theory/basis-theory-js-examples
          token: ${{ secrets.WORKFLOW_DISPATCH_TOKEN }}
          ref: master
          inputs: '{ "source": "Basis-Theory/basis-theory-react" }'

      - name: Slack Deploy / Release Alert
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: ${{ job.status }}
          channel: ${{ secrets.SLACK_RELEASE_CHANNEL_ID }}
          fields: 'repo,commit,message,workflow,job'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Stop Deploy Message
        if: always()
        uses: Basis-Theory/github-actions/deploy-slack-action@master
        with:
          slack-api-token: ${{ secrets.SLACK_DUCKBOT_API_KEY }}
          channel: ${{ vars.SLACK_DUCKBOT_PRODUCT_DEPLOY_CHANNEL }}
          status: 'done'
